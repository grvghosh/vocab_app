{"ast":null,"code":"var _jsxFileName = \"C:\\\\assignment_hiring\\\\Roado-master\\\\Roado-master\\\\client\\\\src\\\\components\\\\WordCard.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MediaCard(props) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n      onClick: props.handleClick,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [props.word.word ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: props.word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Word is Not valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"div\",\n          children: props.word.entries && props.word.entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: 10\n            },\n            children: [\"(\", entry.partOfSpeech, \") \", entry.definitions[0]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = MediaCard;\nvar _c;\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"names":["React","Card","CardActionArea","CardContent","Typography","jsxDEV","_jsxDEV","MediaCard","props","children","onClick","handleClick","word","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","entries","map","entry","index","style","marginTop","partOfSpeech","definitions","_c","$RefreshReg$"],"sources":["C:/assignment_hiring/Roado-master/Roado-master/client/src/components/WordCard.js"],"sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function MediaCard(props) {\n    return (\n        <Card>\n            <CardActionArea onClick={props.handleClick}>\n                <CardContent>\n                   {\n                          props.word.word ? <Typography variant=\"h5\" component=\"h2\">\n                                {props.word.word}\n                            </Typography> : <Typography variant=\"h5\" component=\"h2\">\n                                <h2>Word is Not valid</h2>\n                            </Typography>\n\n                   }\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                        {props.word.entries && props.word.entries.map((entry, index) => (\n                            <p style={{ marginTop: 10 }} key={index}>({entry.partOfSpeech}) {entry.definitions[0]}</p>\n                        ))}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,UAAU,MAAM,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EACrC,oBACIF,OAAA,CAACL,IAAI;IAAAQ,QAAA,eACDH,OAAA,CAACJ,cAAc;MAACQ,OAAO,EAAEF,KAAK,CAACG,WAAY;MAAAF,QAAA,eACvCH,OAAA,CAACH,WAAW;QAAAM,QAAA,GAEFD,KAAK,CAACI,IAAI,CAACA,IAAI,gBAAGN,OAAA,CAACF,UAAU;UAACS,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAAAL,QAAA,EAClDD,KAAK,CAACI,IAAI,CAACA;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,gBAAGZ,OAAA,CAACF,UAAU;UAACS,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAAAL,QAAA,eACnDH,OAAA;YAAAG,QAAA,EAAI;UAAiB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eAGrBZ,OAAA,CAACF,UAAU;UAACS,OAAO,EAAC,OAAO;UAACM,KAAK,EAAC,eAAe;UAACL,SAAS,EAAC,KAAK;UAAAL,QAAA,EAC5DD,KAAK,CAACI,IAAI,CAACQ,OAAO,IAAIZ,KAAK,CAACI,IAAI,CAACQ,OAAO,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvDjB,OAAA;YAAGkB,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAG,CAAE;YAAAhB,QAAA,GAAa,GAAC,EAACa,KAAK,CAACI,YAAY,EAAC,IAAE,EAACJ,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC;UAAA,GAAnDJ,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkD,CAC5F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEf;AAACU,EAAA,GAtBuBrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}