{"ast":null,"code":"var _jsxFileName = \"C:\\\\assignment_hiring\\\\Roado-master\\\\Roado-master\\\\client\\\\src\\\\components\\\\Words.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport WordCard from './WordCard';\nimport WordDetail from './WordDetail';\nimport AddWordModal from './AddWordModal';\nimport { handleInitialData } from '../actions/word';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Words extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openDetailModal: false,\n      openAddWordModal: false,\n      modalData: {}\n    };\n  }\n  toggleAddNewWordModal() {\n    this.setState(prevState => ({\n      openAddWordModal: !prevState.openAddWordModal\n    }));\n  }\n  toggleModal() {\n    this.setState(prevState => ({\n      openDetailModal: !prevState.openDetailModal\n    }));\n  }\n  handleClick(wordName) {\n    const modalData = this.props.words.filter(word => word.word === wordName)[0];\n    console.log(modalData);\n    this.setState({\n      modalData\n    });\n    this.toggleModal();\n  }\n  render() {\n    const {\n      words\n    } = this.props;\n    const {\n      openDetailModal,\n      modalData,\n      openAddWordModal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"heading\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-container\",\n        children: words.map((word, index) => /*#__PURE__*/_jsxDEV(WordCard, {\n          handleClick: () => this.handleClick(word.word),\n          word: word\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WordDetail, {\n        word: modalData,\n        handleClose: this.toggleModal.bind(this),\n        open: openDetailModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddWordModal, {\n        handleClose: this.toggleAddNewWordModal.bind(this),\n        open: openAddWordModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBtn\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => this.toggleAddNewWordModal(),\n          edge: \"end\",\n          color: \"inherit\",\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = words => {\n  return {\n    words\n  };\n};\nexport default connect(mapStateToProps, {\n  handleInitialData\n})(Words);","map":{"version":3,"names":["React","Component","connect","Divider","AddIcon","IconButton","WordCard","WordDetail","AddWordModal","handleInitialData","jsxDEV","_jsxDEV","Words","constructor","args","state","openDetailModal","openAddWordModal","modalData","toggleAddNewWordModal","setState","prevState","toggleModal","handleClick","wordName","props","words","filter","word","console","log","render","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","map","index","handleClose","bind","open","onClick","edge","color","mapStateToProps"],"sources":["C:/assignment_hiring/Roado-master/Roado-master/client/src/components/Words.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Divider from '@material-ui/core/Divider'\nimport AddIcon from '@material-ui/icons/Add'\nimport IconButton from '@material-ui/core/IconButton'\nimport WordCard from './WordCard'\nimport WordDetail from './WordDetail'\nimport AddWordModal from './AddWordModal'\nimport { handleInitialData } from '../actions/word'\n\nclass Words extends Component {\n    state = {\n        openDetailModal: false,\n        openAddWordModal: false,\n        modalData: {}\n    }\n\n    toggleAddNewWordModal() {\n        this.setState(prevState => ({\n            openAddWordModal: !prevState.openAddWordModal\n        }))\n    }\n\n    toggleModal() {\n        this.setState(prevState => ({\n            openDetailModal: !prevState.openDetailModal\n        }))\n    }\n\n    handleClick(wordName) {\n        const modalData = this.props.words.filter(word => word.word === wordName)[0]\n        console.log(modalData)\n        this.setState({ modalData })\n        this.toggleModal()\n    }\n\n    render() {\n        const { words } = this.props\n        const { openDetailModal, modalData, openAddWordModal } = this.state\n\n        return (\n            <div className=\"container\">\n                <h4 className=\"heading\">{this.props.text}</h4>\n                <Divider />\n                <div className=\"word-container\">\n                    {words.map((word,index) => (\n                        <WordCard key={index} handleClick={() => this.handleClick(word.word)} word={word} />\n                    ))}\n                </div>\n                <WordDetail word={modalData} handleClose={this.toggleModal.bind(this)} open={openDetailModal} />\n                <AddWordModal handleClose={this.toggleAddNewWordModal.bind(this)} open={openAddWordModal} />\n                <div className=\"addBtn\">\n                    <IconButton onClick={() => this.toggleAddNewWordModal()} edge=\"end\" color=\"inherit\" aria-label=\"close\">\n                        <AddIcon />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (words) => {\n    return {\n        words\n    }\n}\n\nexport default connect(mapStateToProps, { handleInitialData })(Words)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}